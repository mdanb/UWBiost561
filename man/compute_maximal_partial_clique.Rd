% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_maximal_partial_clique.R
\name{compute_maximal_partial_clique}
\alias{compute_maximal_partial_clique}
\title{Compute a Maximal Partial Clique}
\usage{
compute_maximal_partial_clique(adj_mat, alpha, verbose = FALSE)
}
\arguments{
\item{adj_mat}{A symmetric binary adjacency matrix with 1s on the diagonal and no row/col names.}

\item{alpha}{A numeric scalar between 0.5 and 1. Minimum required edge density.}

\item{verbose}{Logical; if TRUE, prints progress. Default is FALSE.}
}
\value{
A list with:
\describe{
\item{clique_idx}{Numeric vector of node indices forming the partial clique.}
\item{edge_density}{The actual edge density among these nodes.}
}
}
\description{
This function attempts to find the largest subset of nodes from a binary adjacency matrix
such that the induced subgraph has an edge density of at least \code{alpha}. The approach
uses a greedy heuristic: for each node in the graph, it iteratively adds neighboring nodes
that most increase the edge density until no further additions satisfy the required threshold.
This method does not guarantee the global optimum, but returns a reasonably large and dense
partial clique within a practical time frame.
}
\details{
The final result includes the indices of the selected nodes and the achieved edge density.
}
