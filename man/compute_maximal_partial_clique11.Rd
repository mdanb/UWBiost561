% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_maximal_partial_clique11.R
\name{compute_maximal_partial_clique11}
\alias{compute_maximal_partial_clique11}
\title{Compute maximal partial clique}
\usage{
compute_maximal_partial_clique11(adj_mat, alpha, method = c("simple", "pivot"))
}
\arguments{
\item{adj_mat}{A symmetric adjacency matrix with 5-50 rows and columns.}

\item{alpha}{A numeric value between 0.5 and 1 (inclusive) indicating the minimum fraction of edges among nodes in the outputted partial clique.}

\item{method}{One of \code{"simple"} or "\code{pivot}". \code{"simple"} searches for the maximal partial clique using a modified version of the original Bron-Kerbosch algorithm, and \code{"pivot"} uses a modified version of the Bron-Kerbosch algorith with pivot (Bron & Kerbosch 1973).}
}
\value{
Outputs list containing \itemize{
\item clique_idx: A vector of indices that form the partial clique
\item edge_density: Percentage of edges in \code{adj_mat} among nodes in \code{clique_idx}.
}
}
\description{
Determines the indices corresponding to the maximal partial clique of an adjacency matrix for a given partial clique density.
}
\details{
This function uses modified versions of the Bron-Kerbosch algorithm, which is designed to compute maximal full cliques, to compute maximal partial cliques, allowing users to specify \code{"simple"} or "\code{pivot}" (Bron & Kerbosch 1973).
Specifically, if \code{alpha} < 1, the algorithm is modified so that the candidate and excluded nodes at each iteration are not restricted to being neighbors. Rather, a candidate clique is only initially reported as a maximal clique if it satisfies a density of \code{alpha/2} (to help find cliques for which two of the nodes alone don't satisfy alpha density, but together the clique does), and then it searches through the final results to choose the largest clique which satisfies \code{alpha}.
If \code{alpha = 1} is set, then the Bron-Kerbosch algorithm is applied directly.

Using
}
\references{
Bron, C., & Kerbosch, J. (1973). Algorithm 457: finding all cliques of an undirected graph. Communications of the ACM, 16(9), 575-577.
}
