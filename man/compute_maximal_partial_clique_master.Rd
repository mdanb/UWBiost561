% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_maximal_partial_clique_master.R
\name{compute_maximal_partial_clique_master}
\alias{compute_maximal_partial_clique_master}
\title{Master file for computing maximal partial clique}
\usage{
compute_maximal_partial_clique_master(adj_mat, alpha, number, time_limit = 30)
}
\arguments{
\item{adj_mat}{a symmetric \code{matrix} with only values \code{0} or \code{1}, has \code{1}'s along its diagonal, has no row- or column-names, and will have between 5 to 50  rows/columns (inclusive)}

\item{alpha}{a single \code{numeric} (i.e., a length of 1), and has a value between 0.5 and 1 (inclusive)}

\item{number}{an implementation number to use}

\item{time_limit}{the number of seconds the implementation has before it times out}
}
\value{
a list with \code{clique_idx}, \code{edge_density} (which are from the implementation itself)
and \code{status} and \code{valid} (which are added by this function)
}
\description{
This function runs a implementation (dictated by \code{number}) using the inputs
\code{adj_mat} and \code{alpha}. For example, \code{compute_maximal_partial_clique_master(adj_mat, alpha, number = 5)}
executes \code{compute_maximal_partial_clique5(adj_mat, alpha)}.
}
\details{
If the implementation errors (i.e., crashes), then the output \code{status} will be \code{error}.
If the implementation did not complete within \code{time_limit} number of seconds (i.e., took too long), then the output \code{status} will be \code{timed_out}.

The \code{valid} output is a boolean on whether or not the provided \code{clique_idx}
forms a valid partial clique. If the method had status \code{timed_out} or \code{error},
the method would (by default) have a \code{valid=FALSE}.
}
